import {
  script
} from "./chunk-3BRWPHPR.js";
import {
  BaseStyle
} from "./chunk-MDOBR2VR.js";
import {
  createElementBlock,
  mergeProps,
  openBlock,
  renderSlot
} from "./chunk-P7XL4HGA.js";

// node_modules/@primeuix/styles/tabs/index.mjs
var style = ({ dt: n }) => `
.p-tabs {
    display: flex;
    flex-direction: column;
}

.p-tablist {
    display: flex;
    position: relative;
}

.p-tabs-scrollable > .p-tablist {
    overflow: hidden;
}

.p-tablist-viewport {
    overflow-x: auto;
    overflow-y: hidden;
    scroll-behavior: smooth;
    scrollbar-width: none;
    overscroll-behavior: contain auto;
}

.p-tablist-viewport::-webkit-scrollbar {
    display: none;
}

.p-tablist-tab-list {
    position: relative;
    display: flex;
    background: ${n("tabs.tablist.background")};
    border-style: solid;
    border-color: ${n("tabs.tablist.border.color")};
    border-width: ${n("tabs.tablist.border.width")};
}

.p-tablist-content {
    flex-grow: 1;
}

.p-tablist-nav-button {
    all: unset;
    position: absolute !important;
    flex-shrink: 0;
    inset-block-start: 0;
    z-index: 2;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: ${n("tabs.nav.button.background")};
    color: ${n("tabs.nav.button.color")};
    width: ${n("tabs.nav.button.width")};
    transition: color ${n("tabs.transition.duration")}, outline-color ${n("tabs.transition.duration")}, box-shadow ${n("tabs.transition.duration")};
    box-shadow: ${n("tabs.nav.button.shadow")};
    outline-color: transparent;
    cursor: pointer;
}

.p-tablist-nav-button:focus-visible {
    z-index: 1;
    box-shadow: ${n("tabs.nav.button.focus.ring.shadow")};
    outline: ${n("tabs.nav.button.focus.ring.width")} ${n("tabs.nav.button.focus.ring.style")} ${n("tabs.nav.button.focus.ring.color")};
    outline-offset: ${n("tabs.nav.button.focus.ring.offset")};
}

.p-tablist-nav-button:hover {
    color: ${n("tabs.nav.button.hover.color")};
}

.p-tablist-prev-button {
    inset-inline-start: 0;
}

.p-tablist-next-button {
    inset-inline-end: 0;
}

.p-tablist-prev-button:dir(rtl),
.p-tablist-next-button:dir(rtl) {
    transform: rotate(180deg);
}


.p-tab {
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    position: relative;
    border-style: solid;
    white-space: nowrap;
    background: ${n("tabs.tab.background")};
    border-width: ${n("tabs.tab.border.width")};
    border-color: ${n("tabs.tab.border.color")};
    color: ${n("tabs.tab.color")};
    padding: ${n("tabs.tab.padding")};
    font-weight: ${n("tabs.tab.font.weight")};
    transition: background ${n("tabs.transition.duration")}, border-color ${n("tabs.transition.duration")}, color ${n("tabs.transition.duration")}, outline-color ${n("tabs.transition.duration")}, box-shadow ${n("tabs.transition.duration")};
    margin: ${n("tabs.tab.margin")};
    outline-color: transparent;
}

.p-tab:not(.p-disabled):focus-visible {
    z-index: 1;
    box-shadow: ${n("tabs.tab.focus.ring.shadow")};
    outline: ${n("tabs.tab.focus.ring.width")} ${n("tabs.tab.focus.ring.style")} ${n("tabs.tab.focus.ring.color")};
    outline-offset: ${n("tabs.tab.focus.ring.offset")};
}

.p-tab:not(.p-tab-active):not(.p-disabled):hover {
    background: ${n("tabs.tab.hover.background")};
    border-color: ${n("tabs.tab.hover.border.color")};
    color: ${n("tabs.tab.hover.color")};
}

.p-tab-active {
    background: ${n("tabs.tab.active.background")};
    border-color: ${n("tabs.tab.active.border.color")};
    color: ${n("tabs.tab.active.color")};
}

.p-tabpanels {
    background: ${n("tabs.tabpanel.background")};
    color: ${n("tabs.tabpanel.color")};
    padding: ${n("tabs.tabpanel.padding")};
    outline: 0 none;
}

.p-tabpanel:focus-visible {
    box-shadow: ${n("tabs.tabpanel.focus.ring.shadow")};
    outline: ${n("tabs.tabpanel.focus.ring.width")} ${n("tabs.tabpanel.focus.ring.style")} ${n("tabs.tabpanel.focus.ring.color")};
    outline-offset: ${n("tabs.tabpanel.focus.ring.offset")};
}

.p-tablist-active-bar {
    z-index: 1;
    display: block;
    position: absolute;
    inset-block-end: ${n("tabs.active.bar.bottom")};
    height: ${n("tabs.active.bar.height")};
    background: ${n("tabs.active.bar.background")};
    transition: 250ms cubic-bezier(0.35, 0, 0.25, 1);
}
`;

// node_modules/primevue/tabs/style/index.mjs
var classes = {
  root: function root(_ref) {
    var props = _ref.props;
    return ["p-tabs p-component", {
      "p-tabs-scrollable": props.scrollable
    }];
  }
};
var TabsStyle = BaseStyle.extend({
  name: "tabs",
  style,
  classes
});

// node_modules/primevue/tabs/index.mjs
var script$1 = {
  name: "BaseTabs",
  "extends": script,
  props: {
    value: {
      type: [String, Number],
      "default": void 0
    },
    lazy: {
      type: Boolean,
      "default": false
    },
    scrollable: {
      type: Boolean,
      "default": false
    },
    showNavigators: {
      type: Boolean,
      "default": true
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    selectOnFocus: {
      type: Boolean,
      "default": false
    }
  },
  style: TabsStyle,
  provide: function provide() {
    return {
      $pcTabs: this,
      $parentInstance: this
    };
  }
};
var script2 = {
  name: "Tabs",
  "extends": script$1,
  inheritAttrs: false,
  emits: ["update:value"],
  data: function data() {
    return {
      d_value: this.value
    };
  },
  watch: {
    value: function value(newValue) {
      this.d_value = newValue;
    }
  },
  methods: {
    updateValue: function updateValue(newValue) {
      if (this.d_value !== newValue) {
        this.d_value = newValue;
        this.$emit("update:value", newValue);
      }
    },
    isVertical: function isVertical() {
      return this.orientation === "vertical";
    }
  }
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
script2.render = render;

export {
  TabsStyle,
  script2 as script
};
//# sourceMappingURL=chunk-QUEDXL54.js.map
