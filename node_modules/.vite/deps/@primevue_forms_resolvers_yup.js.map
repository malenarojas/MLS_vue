{
  "version": 3,
  "sources": ["../../@primeuix/src/resolvers/yup/index.ts"],
  "sourcesContent": ["import { toValues } from '@primeuix/forms/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport type { AnyObjectSchema, ValidateOptions, ValidationError } from 'yup';\nimport type { ResolverOptions, ResolverResult } from '..';\n\nexport const yupResolver =\n    <T>(schema: AnyObjectSchema, schemaOptions?: ValidateOptions<any>, resolverOptions?: ResolverOptions) =>\n    async ({ values, name }: any): Promise<ResolverResult<T>> => {\n        const { sync = false, raw = false } = resolverOptions || {};\n\n        try {\n            const result = await schema[sync ? 'validateSync' : 'validate'](values, { abortEarly: false, ...schemaOptions });\n\n            return {\n                values: toValues(raw ? values : result, name),\n                errors: {}\n            };\n        } catch (e: any) {\n            if (e?.inner) {\n                return {\n                    values: toValues(raw ? values : undefined, name),\n                    errors: e.inner.reduce((acc: Record<string, any[]>, error: ValidationError) => {\n                        const pathKey = isNotEmpty(error.path) ? error.path : name;\n\n                        if (pathKey) {\n                            acc[pathKey] ||= [];\n                            acc[pathKey].push(error);\n                        }\n\n                        return acc;\n                    }, {})\n                };\n            }\n\n            throw e;\n        }\n    };\n"],
  "mappings": ";;;;;;;AAKO,IAAMA,IACT,CAAIC,GAAyBC,GAAsCC,MACnE,OAAO,EAAE,QAAAC,GAAQ,MAAAC,EAAK,MAAuC;AACzD,MAAM,EAAE,MAAAC,IAAO,OAAO,KAAAC,IAAM,MAAM,IAAIJ,KAAmB,CAAC;AAE1D,MAAI;AACA,QAAMK,IAAS,MAAMP,EAAOK,IAAO,iBAAiB,UAAU,EAAEF,GAAQ,EAAE,YAAY,OAAO,GAAGF,EAAc,CAAC;AAE/G,WAAO,EACH,QAAQO,EAASF,IAAMH,IAASI,GAAQH,CAAI,GAC5C,QAAQ,CAAC,EACb;EACJ,SAASK,GAAQ;AACb,QAAIA,uBAAG,MACH,QAAO,EACH,QAAQD,EAASF,IAAMH,IAAS,QAAWC,CAAI,GAC/C,QAAQK,EAAE,MAAM,OAAO,CAACC,GAA4BC,MAA2B;AAC3E,UAAMC,IAAUC,WAAWF,EAAM,IAAI,IAAIA,EAAM,OAAOP;AAEtD,aAAIQ,MACAF,gBAAiB,CAAC,IAClBA,EAAIE,CAAO,EAAE,KAAKD,CAAK,IAGpBD;IACX,GAAG,CAAC,CAAC,EACT;AAGJ,UAAMD;EACV;AACJ;",
  "names": ["yupResolver", "schema", "schemaOptions", "resolverOptions", "values", "name", "sync", "raw", "result", "toValues", "e", "acc", "error", "pathKey", "isNotEmpty"]
}
