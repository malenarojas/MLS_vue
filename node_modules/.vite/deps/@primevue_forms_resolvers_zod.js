import {
  i,
  isNotEmpty
} from "./chunk-LUX233LW.js";
import "./chunk-OL46QLBJ.js";

// node_modules/@primeuix/forms/resolvers/zod/index.mjs
var h = (y, i2, m) => async ({ values: e, name: s }) => {
  let { sync: l = false, raw: n = false } = m || {};
  try {
    let r = await y[l ? "parse" : "parseAsync"](e, i2);
    return { values: i(n ? e : r, s), errors: {} };
  } catch (r) {
    if (Array.isArray(r == null ? void 0 : r.errors)) return { values: i(n ? e : void 0, s), errors: r.errors.reduce((t, o) => {
      let a = isNotEmpty(o.path) ? o.path.join(".") : s;
      return a && (t[a] || (t[a] = []), t[a].push(o)), t;
    }, {}) };
    throw r;
  }
};
export {
  h as zodResolver
};
//# sourceMappingURL=@primevue_forms_resolvers_zod.js.map
